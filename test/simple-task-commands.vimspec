Describe Simple Task Commands
    Before each
        call PrepareForTest()
    End

    It Correct python version
        CreateTasksfile
        @task
        def check_python_version(ctx):
            import sys
            import os
            FN['themis#log']('python version is %s' % sys.version)
            assert sys.version_info[0] == int(os.environ['PYVER'])
.
        OP check_python_version
    End

    It Runs tasks
        CreateTasksfile
        @task
        def write_file(ctx):
            with open('foo', 'w') as f:
                f.write('hello')
.
        OP write_file
        Assert Equals(readfile('foo'), ['hello'])
    End

    It Task with arguments
        CreateTasksfile
        @task
        def write_file(ctx, filename, data='hello'):
            with open(filename, 'w') as f:
                f.write(data)
.

        Throws OP write_file

        Assert !filereadable('foo')
        OP write_file foo
        Assert Equals(readfile('foo'), ['hello'])

        Assert !filereadable('bar')
        OP write_file bar howdy
        Assert Equals(readfile('bar'), ['howdy'])
    End

    It Task aliases
        CreateTasksfile
        @task(alias='write-file-alias-1')
        def write_file(ctx, data):
            with open('foo', 'w') as f:
                f.write(data)

        @task(alias=['write-file-alias-2', ':write-file-alias-3'])
        def write_file_2(ctx, data):
            with open('bar', 'w') as f:
                f.write(data)

        @task(alias='write-file-alias-4 write-file-alias-5')
        def write_file_3(ctx, data):
            with open('baz', 'w') as f:
                f.write(data)
        write_file_3.add_alias('write-file-alias-6', 'write-file-alias-7 write-file-alias-8')
.
        Assert !filereadable('foo')
        OP write_file hello
        Assert Equals(readfile('foo'), ['hello'])
        OP write-file-alias-1 hi
        Assert Equals(readfile('foo'), ['hi'])
        OP write-file-alias-2 howdy
        Assert Equals(readfile('bar'), ['howdy'])
        OP :write-file-alias-3 sup
        Assert Equals(readfile('bar'), ['sup'])
        OP write-file-alias-4 greetings
        Assert Equals(readfile('baz'), ['greetings'])
        OP write-file-alias-5 something
        Assert Equals(readfile('baz'), ['something'])
        OP write-file-alias-6 hocus
        Assert Equals(readfile('baz'), ['hocus'])
        OP write-file-alias-7 pocus
        Assert Equals(readfile('baz'), ['pocus'])
        OP write-file-alias-8 abracadabra
        Assert Equals(readfile('baz'), ['abracadabra'])
    End
End
